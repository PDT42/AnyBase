@startuml

' Check /out/classes for a .png version of this diagram

' UML Settings
' ############

allow_mixing
skinparam Linetype ortho

' Datatypes / Entities
' ####################

class DataType {
    str: typename
    str: db_type
    callable: convert
}

class Column {
    str: name
    DataType: datatype
    bool: required
}

class AssetType {
    int: asset_type_id
    str: asset_name
    str: asset_table_name
    Column[]: columns
}

class Asset {
    int: asset_id
    Mapping: data
}

' Data Managers
' #############

class AssetTypeManager {
    DbConnection db_connection
    create_asset_type(AssetType: asset_type)
    delete_asset_type(AssetType: asset_type)
    update_asset_type(AssetType: asset_type)
    check_asset_type_exists(AssetType: asset_type)
    get_all()
    get_one(int: asset_type_id)
}

class AssetManager  {
    DbConnection db_connection
    AssetTypeManager asset_type_manager
    create_asset(AssetType: asset_type, Asset: asset)
    delete_asset(AssetType: asset_type, Asset: asset)
    update_asset(AssetType: asset_type, Asset: asset)
    get_all(AssetType: asset_type)
    get_one(int: asset_id)
}

' Layouts and Pages
' #################

interface Plugin {
    str: plugin_macro_path
    Mapping: columns
}

abstract class PageLayout {
    format
    Plugin[]: plugins
}

class AssetTypePage {
    Asset: asset
}


class AssetPage {
    Asset: asset
}

' Page Managers
' #############

class AssetTypePageManager {
    DbConnection db_connection
    create_page(AssetPage: asset_page)
    delete_page(AssetType: asset_type)
    update_page(AssetPage: asset_page)
    check_page_exists(AssetType: asset_type)
    get_page(AssetType: asset_type)
    get_editor(AssetType: asset_type)
}

class AssetPageManager {
    AssetType: asset_type
    DbConnection: db_connection
    create_page(AssetPage: asset_page)
    delete_page(Asset: asset)
    update_page(AssetPage: asset_page)
    check_page_exists(Asset: asset)
    get_page(Asset: asset)
    get_editor(Asset: asset)
}

' Database and Stuff
' ##################


interface DbConnection {
    get()
    commit()
    close()
    read()
    delete()
    write_dict()
    create_table()
    delete_table()
    get_table_info()
    check_table_exists()
}

database database

' Connections and Stuff
' #####################

AssetTypeManager --o AssetManager
AssetTypeManager .. AssetType

AssetManager .. Asset

AssetType --o AssetPageManager
AssetType .. Asset

DataType --o Column
Column --o AssetType

AssetTypePageManager .. AssetTypePage

AssetPageManager .. AssetPage

AssetTypePage --|> PageLayout
AssetPage --|> PageLayout
Asset --o AssetTypePage

Plugin --o PageLayout

DbConnection .> database
DbConnection --o AssetManager
DbConnection --o AssetTypeManager
DbConnection --o AssetTypePageManager
DbConnection --o AssetPageManager

@enduml